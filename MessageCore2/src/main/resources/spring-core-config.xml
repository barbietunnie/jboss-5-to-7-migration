<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:property-placeholder ignore-resource-not-found="false" 
		location="classpath:/META-INF/msgcore.${dbtype:mysql}.properties"/>

	<context:component-scan base-package="com.es.bo, com.es.dao" />
	<context:annotation-config/>

	<!-- Spring transaction manager -->
	<bean id="msgTransactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="msgDataSource"/>
	</bean>

	<!-- Data Sources -->
	<bean id="msgDataSource_v0"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${dataSource.driverClassName}" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />
	</bean>

	<bean id="msgDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<!-- Connection Settings -->
		<property name="driverClassName" value="${dataSource.driverClassName}" />
		<property name="defaultAutoCommit" value="${dataSource.defaultAutoCommit}" />
		<property name="url" value="${dataSource.url}" />
		<property name="username" value="${dataSource.username}" />
		<property name="password" value="${dataSource.password}" />

		<!-- pool properties -->
		<property name="initialSize" value="${dataSource.initialSize}" />
		<property name="maxActive" value="${dataSource.maxActive}" />
		<property name="maxIdle" value="${dataSource.maxIdle}" />
		<property name="minIdle" value="${dataSource.minIdle}" />
		<property name="maxWait" value="${dataSource.maxWait}" />
		<property name="validationQuery" value="${dataSource.validationQuery}" />
		<property name="testOnBorrow" value="${dataSource.testOnBorrow}" />
		<property name="testOnReturn" value="${dataSource.testOnReturn}" />
		<property name="testWhileIdle" value="${dataSource.testWhileIdle}" />
		<property name="minEvictableIdleTimeMillis" value="${dataSource.minEvictableIdleTimeMillis}" />
		<property name="timeBetweenEvictionRunsMillis" value="${dataSource.timeBetweenEvictionRunsMillis}" />
		<property name="numTestsPerEvictionRun" value="${dataSource.numTestsPerEvictionRun}" />
		<property name="removeAbandoned" value="${dataSource.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${dataSource.removeAbandonedTimeout}" />
		<property name="logAbandoned" value="${dataSource.logAbandoned}" />
	</bean>

	<bean id="initDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource" lazy-init="true">
		<property name="driverClassName" value="${dataSource.driverClassName}" />
		<property name="url" value="${dataSource.init.url}" />
		<property name="username" value="${dataSource.init.user}" />
		<property name="password" value="${dataSource.init.pswd}" />
	</bean>
	<!-- End of Data Sources -->

	<!-- Transaction Advice -->
	<tx:advice id="dsTxAdviceEmailAddr" transaction-manager="msgTransactionManager">
		<tx:attributes>
			<tx:method name="findSertAddress" no-rollback-for="org.springframework.dao.EmptyResultDataAccessException"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config proxy-target-class="true">
		<aop:pointcut id="emailAddrOperation"
			expression="execution(* com.es.dao.address.EmailAddressDao.*(..))"/>
		<aop:advisor advice-ref="dsTxAdviceEmailAddr" pointcut-ref="emailAddrOperation"/>
	</aop:config>
	
	<tx:advice id="dsTxAdvice" transaction-manager="msgTransactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" no-rollback-for="org.springframework.dao.EmptyResultDataAccessException"/>
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" no-rollback-for="org.springframework.dao.EmptyResultDataAccessException"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config proxy-target-class="true">
		<!-- all Service classes are bound to transaction advice -->
		<aop:pointcut id="serviceOperation" 
			expression="execution(* com.es.dao..*Dao.*(..))"/>
		<aop:advisor advice-ref="dsTxAdvice" pointcut-ref="serviceOperation"/>
	</aop:config>

	<aop:config>
		<aop:pointcut id="taskOperation" 
			expression="execution(* com.es.task..*(..))"/>
		<aop:advisor advice-ref="dsTxAdvice" pointcut-ref="taskOperation"/>
	</aop:config>
	
	<aop:config proxy-target-class="true">
		<aop:pointcut id="boOperation" 
			expression="execution(* com.es.bo..*Bo.*(..))"/>
		<aop:advisor advice-ref="dsTxAdvice" pointcut-ref="boOperation"/>
	</aop:config>
	<!-- end of Advice -->

</beans>